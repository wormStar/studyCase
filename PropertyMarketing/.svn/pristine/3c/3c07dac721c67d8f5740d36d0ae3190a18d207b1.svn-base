#根记录器,stdout用于描述将来会把日志信息输出到控制台
#D， debug信息输出到
#E，error级别错误信息
log4j.rootLogger = stdout ,  D,  E

#配置输出到控制台信息的追加器，Java类
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
#目标用于说明输出到控制台使用哪个语句输出
log4j.appender.stdout.Target = System.out
#格式：Java类
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
#配置日志信息输出的具体格式
log4j.appender.stdout.layout.ConversionPattern =  [LOG] %p-%c-%t-%r-%l-%m %d{yyyy/MM/dd HH:mm:ss:SSS}%n

#配置追加器，文件追加器
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#日志文件的路径，可以使用绝对路径，也可以使用相对路径{CATALINA_BASE}, tomcat的安装路径
log4j.appender.D.File=${CATALINA_BASE}/logs/debug_logs.log
log4j.appender.D.Append = true
#处理哪个级别的日志，最低级别,低于此级别的都不输出
#Log4j建议只使用四个级别，优先级从高到低分别是 ERROR、WARN、INFO、DEBUG
log4j.appender.D.Threshold = INFO
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = [LOG] %p-%c-%t-%r-%l-%m %d{yyyy/MM/dd HH:mm:ss:SSS}%n

log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = ${CATALINA_BASE}/logs/error_logs.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = [LOG] %p-%c-%t-%r-%l-%m %d{yyyy/MM/dd HH:mm:ss:SSS}%n